<template>
	<div
		class="r-element-tree-node-open { selected ? 'selected' : '' } { hovered ? 'hovered' : '' }"
		on-click="{ this.onClick() }"
		on-mouseenter="{ this.onMouseEnter() }"
		on-mouseleave="{ this.onMouseLeave() }"
	>
		<span class="arrow { open ? 'arrow-open' : '' }" on-click="{ this.onToggle( $event ) }"><Icon>&#xe606;</Icon></span><span class="tag">&lt;{ node.text || node.name }{#if node.attrs}{#list node.attrs as attr} <span class="attr-key">{ attr_key }</span><span class="attr-plain">="</span><span class="attr-value">{ attr }</span><span class="attr-plain">"</span>{/list}{/if}&gt;{#if !open}{#if children}...{/if}&lt;/{ node.text || node.name }&gt;{/if}</span>
	</div>
</template>

<script>
	import Icon from '../icon/icon';

	export default {
		name: 'ElementTreeNodeOpen',
		component: {
			Icon
		},
		onClick() {
			this.$emit( 'click' );
		},
		onMouseEnter() {
			this.data.hovered = true;
			this.$update();
		},
		onMouseLeave() {
			this.data.hovered = false;
			this.$update();
		},
		onToggle( e ) {
			e.stopPropagation();
			this.$emit( 'toggle' );
		}
	}
</script>

<style lang="less" scoped>
	.r-element-tree-node-open {
		box-sizing: border-box;
		display: block;
		height: 2em;
		line-height: 2em;
		text-align: left;
		color: #c71280;
		background-color: transparent;

		&.hovered::before {
			left: 0;
			right: 0;
			background-color: #ebf2fc;
		}

		&.selected::before {
			left: 0;
			right: 0;
			background-color: #3879d9;
		}

		&::before {
			display: block;
			content: '';
			position: absolute;
			background-color: #DDD;
			height: 2em;
		}

		.arrow {
			display: inline-block;
			color: #666;
			transform: rotate(0);

			&.arrow-open {
				transform: rotate(90deg);
			}
		}

		.tag {
			position: relative;
		}

		&.selected {
			color: #FFF;

			.arrow {
				color: #FFF;
			}

			.attr-key {
				color: #BBB;
			}
			.attr-plain {
				color: #BBB;
			}
			.attr-value {
				color: #FFF;
			}
		}

		.attr-key {
			color: #9a4500;
		}
		.attr-plain {
			color: #a894a6;
		}
		.attr-value {
			color: #1a1aa6;
		}
	}
</style>
