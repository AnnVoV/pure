<template>
	<div class="doc">
		{#if markdown}
		<div class="markdown-box">
			{#inc markdown }
		</div>
		{/if}

		{#if rgl}
		<div class="demo-box">
			{#inc rgl}
		</div>
		{/if}

		<div class="{ deindentRgl ? 'code-box' : '' }">
			<pre><code ref="r" class="lang-html">{ deindentRgl }</code></pre>
		</div>

		<div class="{ deindentJs ? 'code-box' : '' }">
			<pre><code ref="j" class="lang-js">{ deindentJs }</code></pre>
		</div>
	</div>
</template>

<script>
	import deindent from 'de-indent';

	export default {
		name: 'Demo',
		config() {
			const hasOwn = Object.prototype.hasOwnProperty;

			if( this.data.mixin ) {
				if( this.data.mixin.config ) {
					this.data.mixin.config.call( this );
				}

				for( let m in this.data.mixin ) {
					if( !hasOwn.call( this, m ) ) {
						this[ m ] = this.data.mixin[ m ];
					}
				}
			}

			if( this.data.rgl ) {
				this.data.deindentRgl = deindent( this.data.rgl ).trim();
			}

			if( this.data.js ) {
				this.data.deindentJs = deindent( this.data.js ).trim();
			}
		},
		init() {
			if( this.data.deindentRgl ) {
				hljs.highlightBlock( this.$refs.r );
			}
			if( this.data.deindentJs ) {
				hljs.highlightBlock( this.$refs.j );
			}
		}
	};
</script>

<style lang="less">
	.lang-html {
		position: relative;

		&::after {
			position: absolute;
			top: 0;
			right: 0;
			content: 'html';
			display: block;
			padding: 2px 9px;
			background-color: #d7dfe8;
			border-radius: 0 0 0 4px;
			color: #547ecb;
			pointer-events: none;
		}
	}
	.lang-js {
		position: relative;

		&::after {
			position: absolute;
			top: 0;
			right: 0;
			content: 'javascript';
			display: block;
			padding: 2px 9px;
			background-color: #d7dfe8;
			border-radius: 0 0 0 4px;
			color: #547ecb;
			pointer-events: none;
		}
	}
</style>

<style lang="less" scoped>
	.code-box {
		.hljs {
			border-radius: 4px;
			line-height: 1.6;
			padding: 15px;
		}
	}

	.markdown-box {
		margin-bottom: 20px;
		border-bottom: solid 1px #f0f0f0;
		color: #666;
	}
</style>
