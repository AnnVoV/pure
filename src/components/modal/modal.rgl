<template>
	<div class="r-modal-mask r-modal-mask-transition" r-animation="
		on: close-modal;
		wait: 0;
		class: r-modal-mask-out, 3;
	">
		<div
			class="r-modal r-modal-transition"
			r-animation="
				on: open-modal;
				wait: 0;
				class: r-modal-in, 3;
			"
			r-animation="
				on: close-modal;
				wait: 0;
				class: r-modal-out, 3;
				emit: destroy-modal;
			"
		>
			<div class="r-modal-hd">
				{ title }
			</div>
			<div class="r-modal-bd">
				{#inc this.$body}
			</div>
			<div class="r-modal-actions">
				<Button on-click="{ this.onCancel() }">{ cancelText || 'Cancel' }</Button>
				<Button primary on-click="{ this.onOk() }">{ okText || 'Confirm' }</Button>
			</div>
		</div>
	</div>
</template>

<script>
	import Button from '../button/button.rgl';

	export default {
		name: 'Modal',
		onCancel() {
			this.$emit( 'cancel' );
		},
		onOk() {
			this.$emit( 'ok' );
		},
		init() {
			this.$emit( 'open-modal' );
		},
		destroy() {
			this.$emit( 'close-modal' );

			const destroy = this.supr;

			this.$on( 'destroy-modal', () => {
				destroy.call( this );
			} );

			// this.supr();
		}
	};
</script>

<style lang="less" scoped>
	@import '../../variable.less';

	.r-modal-mask {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background-color: rgba(0,0,0,.4);
		opacity: 1;
	}

	.r-modal {
		position: fixed;
		top: 50%;
		left: 50%;
		transform: translate3d(-50%,-50%,0);
		min-width: 700px;
		max-width: 88%;
		background-color: #FFF;
		border-radius: 5px;
		box-shadow: 2px 4px 6px 1px rgba(50, 50, 50, 0.14);
		color: #333;
	}

	.r-modal-hd {
		text-align: center;
		padding: 20px 0;
		font-size: 19px;
	}

	.r-modal-bd {
		padding: 0 40px;
		font-size: 15px;
		height: 600px;
		max-height: 70vh;
		overflow-y: auto;

		&::-webkit-scrollbar {
			width: 6px;
			height: 6px;
		}

		&::-webkit-scrollbar-track {
			width: 6px;
			height: 6px;
		}

		&::-webkit-scrollbar-thumb {
			width: 6px;
			height: 6px;
			border-radius: 10px;
			background-color: fade(@primary-color, 15%);
		}
	}

	.r-modal-actions {
		padding: 20px;
		text-align: center;
	}

	/* Transition */

	.r-modal-transition {
		transition-property: all;
		transition-duration: 500ms;
		transition-timing-function: cubic-bezier(0.4, 0, 0, 1.5);
		opacity: 0;
		transform: translate3d(-50%,-50%,0) scale3d(.5,.5,.5);
	}

	.r-modal.r-modal-in {
		transform: translate3d(-50%,-50%,0) scale3d(1,1,1);
		opacity: 1;
	}

	.r-modal.r-modal-out {
		transform: translate3d(-50%,-50%,0) scale3d(1.4,1.4,1.4);
		opacity: 0;
	}

	.r-modal-mask-transition {
		transition-property: all;
		transition-duration: 500ms;
		transition-timing-function: cubic-bezier(0.4, 0, 0, 1.5);
	}

	.r-modal-mask.r-modal-mask-out {
		opacity: 0;
	}
</style>
