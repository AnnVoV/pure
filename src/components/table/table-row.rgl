<template>
	<tr class="r-tablerow">
		{#list fields as field}
			<td nowrap>{#include this.renderColumns( field ) }</td>
		{/list}
	</tr>
</template>

<script>
	// TableRow会对fields中的render进行处理
	// 如果render后的内容没有事件交互，可以直接给Table传入dataSource并在fields中定义render
	// 如果需要更强的控制权，可以使用Table+Tr+Td组合，传入fields(生成表格标题)的方式
	export default {
		name: 'TableRow',
		config( data ) {
		},
		renderColumns( field ) {
			let rendered = '';
			if( typeof field.render === 'function' ) {
				rendered = field.render( this.data.dataSource[ field.key ], this.data.dataSource );
			}

			if( !rendered ) {
				rendered = this.data.dataSource[ field.key ];
			}

			if( typeof rendered !== 'string' ) {
				rendered = JSON.stringify( rendered );
			}

			return rendered;
		}
	}
</script>

<style lang="less" scoped>
	.r-tablerow {
		& td {
			padding: .78571429em;
			border-top: 1px solid rgba(34,36,38,.1);
			text-align: inherit;
			border-left: 1px solid rgba(34,36,38,.1);
		}

		&:first-child td {
			border-top: none
		}

		& td:first-child {
			border-left: none;
		}

		&:nth-child(2n), &:nth-child(2n) {
			background-color: rgba(0,0,50,.02);
		}
	}
</style>
