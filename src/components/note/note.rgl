<template>
	<div class="r-note { fixed ? 'r-note-fixed' : '' }">
		<div class="r-note-inner">
			<div class="r-note-icon" style="color: { color };"><Icon>{ icon }</Icon></div>
			<div class="r-note-content">
				{#inc this.$body}
			</div>
		</div>
	</div>
</template>

<script>
	import '../icon/icon';

	function convert( str ) {
		str = str.replace(/(\\u)(\w{4})/gi,function($0){
			return (String.fromCharCode(parseInt((escape($0).replace(/(%5Cu)(\w{4})/g,"$2")),16)));
		});
		str = str.replace(/(&#x)(\w{4});/gi,function($0){
			return String.fromCharCode(parseInt(escape($0).replace(/(%26%23x)(\w{4})(%3B)/g,"$2"),16));
		});
		return str;
	}

	export default {
		name: 'Note',
		computed: {
			color: function() {
				const DEFAULT_COLOR = '#689eff';
				const maps = {
					success: '#6ed084',
					warning: '#fda411',
					error: '#F44556',
				};

				return maps[ this.data.type ] || DEFAULT_COLOR;
			},
			icon: function() {
				const DEFAULT_ICON = '&#xe80c;';
				const maps = {
					success: '&#xe625;',
					warning: '&#xe641;',
					error: '&#xe6a0;',
				};

				return convert( maps[ this.data.type ] || DEFAULT_ICON );
			}
		}
	}
</script>

<style lang="less">
	.r-note-will-transition {
		position: fixed;
		top: 0;
		left: 50%;
		opacity: .8;
		transform: translate3d(-50%,-40px,0);
		transition: transform .7s cubic-bezier(.4,0,0,1.39), opacity .7s cubic-bezier(.4,0,0,1.39);
	}

	.r-note-in {
		transform: translate3d(-50%,90px,0);
		opacity: 1;
	}

	.r-note-out {
		transform: translate3d(-50%,-40px,0);
		opacity: .6;
	}
</style>

<style lang="less" scoped>
	.r-note {
		display: inline-block;

		&-inner {
			display: flex;
			align-items: center;
			justify-content: center;
			height: 32px;
			padding: 0 15px;
			border-radius: 4px;
			background-color: #FFF;
			border: solid 1px #DDD;
			color: #666;
			box-shadow: 2px 2px 8px -2px rgba(50, 50, 50, 0.14);
			font-size: 1rem;
		}

		&-icon {
			font-size: 16px;
			margin-right: 7px;
		}
	}
</style>
